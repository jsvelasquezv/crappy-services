name: Deploy Cloudflare Workers

on:
  push:
    paths:
      - 'apps/**'
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy-all:
        description: 'Deploy all Workers?'
        required: true
        type: boolean
      environment:
        description: 'Environment to deploy to'
        type: environment

jobs:
  deploy-workers:
    name: Deploy Cloudflare Workers
    runs-on: ubuntu-latest

    strategy:
      matrix:
        worker:
          - frontend
          - api

    defaults:
      run:
        working-directory: apps/${{ matrix.worker }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        if: matrix.worker == 'frontend'
        run: pnpm build

      # - name: Check if project changed
      #   id: changes
      #   run: |
      #     git fetch origin main
      #     if git diff --quiet origin/main -- app/${{ matrix.project }}; then
      #       echo "changed=false" >> $GITHUB_OUTPUT
      #     else
      #       echo "changed=true" >> $GITHUB_OUTPUT
      #     fi
      - name: Deploy with Wrangler
        # if: github.event.inputs.deploy-all == true
        # run: |
        #   pnpm dlx wrangler deploy --env ${{github.event.inputs.environment}} --name crappy-services-${{ matrix.worker }}
        run: |
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} > .vars
          pnpm dlx wrangler deploy --name crappy-services-${{ matrix.worker }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
